CREATE TABLE Driver
(DriverID INT NOT NULL,
DriverName VARCHAR NOT NULL,
DriverCarModel VARCHAR(50) NOT NULL,
DriverRating DECIMAL(3,2) NOT NULL,
DriverLPNum VARCHAR(20) NOT NULL,
PRIMARY KEY (DriverID)  );

CREATE TABLE User
(UserID INT NOT NULL,
UserName VARCHAR(50) NOT NULL,
UserEmail VARCHAR(50) NOT NULL,
UserPhoneNum VARCHAR(20) NOT NULL,
UserRating DECIMAL(3,2) NOT NULL,
UserPaymentInfo VARCHAR(100) NOT NULL,
PRIMARY KEY (UserID)  );

CREATE TABLE Promo
(PromoUsageLimit INT NOT NULL,
PromoExpirationDate DATE NOT NULL,
PromoCode VARCHAR(20) NOT NULL,
PromoDiscountAmount DECIMAL(5,2) NOT NULL,
PRIMARY KEY (PromoCode) );

CREATE TABLE Location
( LocationID INT NOT NULL,
LocationAddress VARCHAR(100) NOT NULL,
LocationLatitude DECIMAL(10,8) NOT NULL,
LocationLongitude DECIMAL(11,8) NOT NULL,
PRIMARY KEY (LocationID)  );

CREATE TABLE Car
(CarID INT NOT NULL,
CarMakeModel VARCHAR(50) NOT NULL,
CarYear INT NOT NULL,
CarColor VARCHAR(20) NOT NULL,
CarCondition VARCHAR(50) NOT NULL,
CarCapacity INT NOT NULL,
DriverID INT,
PRIMARY KEY (CarID),
FOREIGN KEY (DriverID) REFERENCES Driver(DriverID) );

CREATE TABLE Ride
(RidePickupLocation INT NOT NULL,
RideFare DECIMAL(10,2) NOT NULL,
RideDistance DECIMAL(10,2) NOT NULL,
RideStatus VARCHAR(50) NOT NULL,
RideID INT NOT NULL,
RideDropOffLocation INT NOT NULL,
UserID INT NOT NULL,
DriverID INT NOT NULL,
CarID INT NOT NULL,
LocationID INT NOT NULL,
PRIMARY KEY (RideID),
FOREIGN KEY (UserID) REFERENCES User(UserID),
FOREIGN KEY (DriverID) REFERENCES Driver(DriverID),
FOREIGN KEY (CarID) REFERENCES Car(CarID),
FOREIGN KEY (LocationID) REFERENCES Location(LocationID) );

CREATE TABLE Payment
(PaymentAmount DECIMAL(10,2) NOT NULL,
PaymentID INT NOT NULL,
PaymentType VARCHAR(50) NOT NULL,
PaymentStatus VARCHAR(50) NOT NULL,
UserID INT NOT NULL,
RideID INT NOT NULL,
PromoCode VARCHAR(20) NOT NULL,
PRIMARY KEY (PaymentID),
FOREIGN KEY (UserID) REFERENCES User(UserID),
FOREIGN KEY (RideID) REFERENCES Ride(RideID),
FOREIGN KEY (PromoCode) REFERENCES Promo(PromoCode) );

CREATE TABLE Rating
(RatingComments VARCHAR(500) NOT NULL,
RatingUserID INT NOT NULL,
RatingID INT NOT NULL,
RatingValue DECIMAL(3,2) NOT NULL,
UserID INT NOT NULL,
DriverID INT NOT NULL,
PRIMARY KEY (RatingID),
FOREIGN KEY (UserID) REFERENCES User(UserID),
FOREIGN KEY (DriverID) REFERENCES Driver(DriverID)  );
